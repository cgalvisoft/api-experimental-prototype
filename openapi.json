{
  "openapi": "3.0.2",
  "info": {
    "title": "Experimental API",
    "description": "A simple REST API for managing to-do tasks",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "summary": "Get Tasks",
        "operationId": "get_tasks_tasks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "operationId": "create_task_tasks_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "summary": "Get Task",
        "operationId": "get_task_tasks__task_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Task Id",
              "type": "integer"
            },
            "name": "task_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "operationId": "update_task_tasks__task_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Task Id",
              "type": "integer"
            },
            "name": "task_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Task",
        "operationId": "delete_task_tasks__task_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Task Id",
              "type": "integer"
            },
            "name": "task_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPError": {
        "title": "HTTPError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Task": {
        "title": "Task",
        "required": [
          "title",
          "description",
          "id"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "description": "Task title",
            "minLength": 1,
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "description": "Task description",
            "minLength": 1,
            "type": "string"
          },
          "completed": {
            "title": "Completed",
            "description": "Task completion status",
            "type": "boolean",
            "default": false
          },
          "id": {
            "title": "Id",
            "description": "Task unique identifier",
            "type": "integer"
          }
        },
        "example": {
          "id": 1,
          "title": "Complete project",
          "description": "Finish the REST API demo project",
          "completed": false
        }
      },
      "TaskCreate": {
        "title": "TaskCreate",
        "required": [
          "title",
          "description"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "description": "Task title",
            "minLength": 1,
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "description": "Task description",
            "minLength": 1,
            "type": "string"
          },
          "completed": {
            "title": "Completed",
            "description": "Task completion status",
            "type": "boolean",
            "default": false
          }
        }
      },
      "TaskUpdate": {
        "title": "TaskUpdate",
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "description": "Task title",
            "minLength": 1,
            "maxLength": 100,
            "type": "string"
          },
          "description": {
            "title": "Description",
            "description": "Task description",
            "minLength": 1,
            "type": "string"
          },
          "completed": {
            "title": "Completed",
            "description": "Task completion status",
            "type": "boolean"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}